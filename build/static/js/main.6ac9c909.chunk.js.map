{"version":3,"sources":["Firebase.js","Home.js","Welcome.js","Navigation.js","FormError.js","Login.js","MeetingsList.js","Meetings.js","Register.js","CheckIn.js","AttendeesList.js","Attendees.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Home","user","this","props","className","href","to","Component","Welcome","userName","logOutUser","onClick","e","Navigation","FormError","message","Login","handleChange","name","target","value","setState","handleSubmit","registrationInfo","email","state","password","preventDefault","signInWithEmailAndPassword","then","navigate","catch","error","errorMessage","displayName","onSubmit","htmlFor","required","type","id","placeholder","onChange","MeetingsList","deleteMeeting","currId","database","ref","userID","remove","meetingsList","meetings","map","meeting","key","meetingId","role","aria-label","title","meetingName","Meetings","addMeeting","aria-describedby","length","Register","passOne","passTwo","createUserWithEmailAndPassword","regInfo","CheckIn","meetingID","push","attendeeName","attendeeEmail","star","AttendeesList","deleteAttendee","whichMeeting","whichAttendee","adminUser","toggleStar","undefined","set","admin","attendeesList","attendees","attendee","attendeeID","Attendees","resetQuery","searchQuery","displayAttendees","allAttendees","randomAttendee","randAttendee","Math","floor","random","on","snapshot","val","item","filterAttendees","filter","toLowerCase","match","App","handleReg","username","onAuthStateChanged","FBUser","updateProfile","uid","signOut","totalMeetings","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6ac9c909.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBuSU7Hq-Myn2sopMMSouyI7OWLCU_b-V8\",\r\n    authDomain: \"react-spa-66c62.firebaseapp.com\",\r\n    databaseURL: \"https://react-spa-66c62.firebaseio.com\",\r\n    projectId: \"react-spa-66c62\",\r\n    storageBucket: \"react-spa-66c62.appspot.com\",\r\n    messagingSenderId: \"883758846066\",\r\n    appId: \"1:883758846066:web:c01c16ef734e8a5626b2eb\",\r\n    measurementId: \"G-BKHXVFXVPS\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = new firebase.auth();\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nclass Home extends Component{\r\n\t\r\n\t\r\n\trender(){\r\n\t\tconst {user} = this.props;\r\n        return(\r\n            <div className=\"container text-center\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\r\n                    <div className=\"display-4 text-primary mt-3 mb-2\">\r\n                        Meeting Log\r\n                    </div>\r\n                    <p className=\"lead\">\r\n                        This simple app creates meetings, allows people to check\r\n                        in, and picks random users to award giveaways. It's a\r\n                        good example of a Single Page Application which includes\r\n                        connection to a database and routing. It's a practical\r\n                        way to learn <a href=\"https://reactjs.org/\">React</a> with <a href=\"https://firebase.google.com\">Firebase</a>.\r\n                    </p>\r\n\t\t\t\t\t{user ? \r\n\t\t\t\t\t\t<Link to=\"/meetings\" className=\"btn btn-primary\">Meetings</Link>\r\n\t\t\t\t\t: \r\n\t\t\t\t\t\t<><Link to=\"/register\" className=\"btn btn-outline-primary mr-2\">Register</Link>\r\n                    \t<Link to=\"/login\" className=\"btn btn-outline-primary mr-2\">Log In</Link></>\r\n\t\t\t\t\t}\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nclass Welcome extends Component{\r\n\t\r\n\trender(){\r\n\t\tconst {userName, logOutUser} = this.props;\r\n        return(\r\n            <div className=\"text-center mt-4\">    \r\n                <span className=\"text-secondary font-weight-bold pl-1\">\r\n                    Welcome {userName}\r\n                </span>,\r\n                <Link to=\"/logout\" className=\"font-weight-bold text-primary pl-1\" onClick={e => logOutUser(e)}>Log out</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\nimport { Link } from \"@reach/router\";\r\n\r\nimport { FaUser } from \"react-icons/fa\";\r\n\r\nclass Navigation extends Component{\r\n\t\r\n\trender(){\r\n\t\tconst {user, logOutUser} = this.props;\r\n        return(\r\n            <nav className=\"site-nav family-sans navbar navbar-expand bg-primary navbar-dark higher\">\r\n                <div className=\"container-fluid\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <FaUser className=\"mr-1\" /> Meeting Log\r\n                    </Link>\r\n                    <div className=\"navbar-nav ml-auto\">\r\n                        {user && <Link className=\"nav-item nav-link\" to=\"/meetings\">Meetings</Link>}\r\n\r\n                        {!user && <Link className=\"nav-item nav-link\" to=\"/login\">Log in</Link>}\r\n\r\n                        {!user && <Link className=\"nav-item nav-link\" to=\"/register\">Register</Link>}\r\n\r\n                        {user && <Link className=\"nav-item nav-link\" to=\"/login\" onClick={e => logOutUser(e)}>Log out</Link>}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\nclass FormError extends Component{\r\n\t\r\n\trender(){\r\n\t\tconst {message} = this.props;\r\n        return(\r\n            <div className=\"col-12 alert alert-danger px-3\">    \r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormError;","import React, { Component } from 'react';\r\nimport firebase from './Firebase';\r\nimport FormError from './FormError';\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass Login extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            errorMessage: null\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        let registrationInfo = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            registrationInfo.email, \r\n            registrationInfo.password\r\n        ).then(() => {\r\n            navigate('./meetings')\r\n        }).catch(error => {\r\n            if(error.message !== null){\r\n                this.setState({errorMessage: error.message})\r\n            }else{\r\n                this.setState({errorMessage: null})\r\n            }\r\n        })\r\n    }\r\n    \r\n\trender(){\r\n        return(\r\n            <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"card bg-light\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"font-weight-light mb-3\">Log in</h3>\r\n                                    <section className=\"form-group\">\r\n                                        {this.state.errorMessage ? <FormError message={this.state.errorMessage} /> : ''}\r\n                                    <label\r\n                                        className=\"form-control-label sr-only\"\r\n                                        htmlFor=\"Email\">\r\n                                        Email\r\n                                    </label>\r\n                                    <input\r\n                                        required\r\n                                        className=\"form-control\"\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    </section>\r\n                                    <section className=\"form-group\">\r\n                                    <input\r\n                                        required\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    </section>\r\n                                    <div className=\"form-group text-right mb-0\">\r\n                                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                                            Log in\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport firebase from \"./Firebase\";\r\nimport { navigate } from '@reach/router';\r\nimport { GoTrashcan, GoListUnordered } from \"react-icons/go\";\r\nimport { FaLink } from 'react-icons/fa';\r\n\r\nclass MeetingsList extends Component{\r\n\r\n    deleteMeeting = (e, currId) =>{\r\n        e.preventDefault();\r\n        const ref = firebase.database().ref(`meetings/${this.props.userID}/${currId}`);\r\n        ref.remove();\r\n    }\r\n\r\n\trender(){\r\n        const {meetings} = this.props;\r\n        const meetingsList = meetings.map(meeting => {\r\n            return <div>\r\n                <div className=\"list-group-item d-flex\" key={meeting.meetingId}>\r\n                    <section className=\"btn-group align-self-center\" role=\"group\" aria-label=\"Meeting Options\">\r\n                        <button className=\"btn btn-sm btn-outline-secondary\" title=\"Delete Meeting\" onClick={e => this.deleteMeeting(e, meeting.meetingId)}>\r\n                            <GoTrashcan />\r\n                        </button>\r\n                        <button className=\"btn btn-sm btn-outline-secondary\" title=\"Check In\" onClick={() => navigate(`/checkin/${this.props.userID}/${meeting.meetingId}`)}>\r\n                            <FaLink />\r\n                        </button>\r\n                        <button className=\"btn btn-sm btn-outline-secondary\" title=\"Meetings List\" onClick={() => navigate(`/attendees/${this.props.userID}/${meeting.meetingId}`)}>\r\n                            <GoListUnordered />\r\n                        </button>\r\n                    </section>\r\n                    <section className=\"pl-3 text-left align-self-center\">\r\n                        {meeting.meetingName}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        })\r\n        return(\r\n            <div>{meetingsList}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MeetingsList;","import React, { Component } from 'react';\r\nimport MeetingsList from \"./MeetingsList\";\r\n\r\nclass Meetings extends Component{\r\n\t\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            meetingName: '',\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        this.props.addMeeting(this.state.meetingName);\r\n        this.setState({meetingName: ''});\r\n    }\r\n\r\n\r\n\trender(){\r\n        return(\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-8 text-center\">\r\n                    <h1 className=\"font-weight-light\">Add a Meeting</h1>\r\n                    <div className=\"card bg-light\">\r\n                        <div className=\"card-body text-center\">\r\n                        <form onSubmit={this.handleSubmit}\r\n                            className=\"formgroup\"\r\n                        >\r\n                            <div className=\"input-group input-group-lg\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"meetingName\"\r\n                                placeholder=\"Meeting name\"\r\n                                aria-describedby=\"buttonAdd\"\r\n                                value={this.state.meetingName}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-sm btn-info\"\r\n                                id=\"buttonAdd\"\r\n                                >\r\n                                +\r\n                                </button>\r\n                            </div>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-11 col-md-6 text-center\">\r\n                        <div className=\"card border-top-0 rounded-0\">\r\n                            {(this.props.meetings && this.props.meetings.length) ? (\r\n                                <>\r\n                                <div className=\"card-body py-2\">\r\n                                    <h4 className=\"card-title font-weight-light m-0\">Your Meetings</h4>\r\n                                </div>\r\n\r\n                                <div className=\"list-group list-group-flush\">\r\n                                    <MeetingsList userID={this.props.userID} meetings={this.props.meetings} />\r\n                                </div>\r\n                                </>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Meetings;","import React, { Component } from 'react';\r\nimport FormError from \"./FormError\";\r\nimport firebase from './Firebase';\r\n\r\n\r\nclass Register extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            passOne: '',\r\n            passTwo: '',\r\n            errorMessage: null\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        }, () => {\r\n            if(this.state.passOne !== this.state.passTwo){\r\n                this.setState({errorMessage: 'Passwords do not match'})\r\n            }else{\r\n                this.setState({errorMessage: null})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        let registrationInfo = {\r\n            displayName: this.state.displayName,\r\n            email: this.state.email,\r\n            password: this.state.passOne\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            registrationInfo.email, \r\n            registrationInfo.password\r\n        ).then(() => {\r\n            this.props.regInfo(registrationInfo.displayName)\r\n        }).catch(error => {\r\n            if(error.message !== null){\r\n                this.setState({errorMessage: error.message})\r\n            }else{\r\n                this.setState({errorMessage: null})\r\n            }\r\n        })\r\n    }\r\n\r\n\trender(){\r\n        return(\r\n            <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"card bg-light\">\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"font-weight-light mb-3\">Register</h3>\r\n                                    <div className=\"form-row\">\r\n                                        {this.state.errorMessage ? <FormError message={this.state.errorMessage} /> : ''}\r\n                                        <section className=\"col-sm-12 form-group\">\r\n                                        <label\r\n                                            className=\"form-control-label sr-only\"\r\n                                            htmlFor=\"displayName\"\r\n                                        >\r\n                                                Display Name\r\n                                            </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            id=\"displayName\"\r\n                                            placeholder=\"Display Name\"\r\n                                            name=\"displayName\"\r\n                                            required\r\n                                            value = {this.state.displayName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        </section>\r\n                                    </div>\r\n                                    <section className=\"form-group\">\r\n                                        <label\r\n                                        className=\"form-control-label sr-only\"\r\n                                        htmlFor=\"email\"\r\n                                        >\r\n                                        Email\r\n                                        </label>\r\n                                        <input\r\n                                        className=\"form-control\"\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        placeholder=\"Email Address\"\r\n                                        required\r\n                                        value = {this.state.email}\r\n                                            onChange={this.handleChange}\r\n                                        name=\"email\"\r\n                                        />\r\n                                    </section>\r\n                                    <div className=\"form-row\">\r\n                                        <section className=\"col-sm-6 form-group\">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            name=\"passOne\"\r\n                                            placeholder=\"Password\"\r\n                                            value = {this.state.passOne}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        </section>\r\n                                        <section className=\"col-sm-6 form-group\">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"password\"\r\n                                            required\r\n                                            value = {this.state.passTwo}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"passTwo\"\r\n                                            placeholder=\"Repeat Password\"\r\n                                        />\r\n                                        </section>\r\n                                    </div>\r\n                                    <div className=\"form-group text-right mb-0\">\r\n                                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Register\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport firebase from './Firebase';\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass CheckIn extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let ref = firebase.database().ref(`meetings/${this.props.userID}/${this.props.meetingID}/attendees`)\r\n\r\n        ref.push({\r\n            attendeeName: this.state.displayName,\r\n            attendeeEmail: this.state.email,\r\n            star: false\r\n        })\r\n\r\n        navigate(`/attendees/${this.props.userID}/${this.props.meetingID}`)\r\n    }\r\n    \r\n\trender(){\r\n        return(\r\n            <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card bg-light\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"font-weight-light mb-3\">Check in</h3>\r\n                            <section className=\"form-group\">\r\n                            <label\r\n                                className=\"form-control-label sr-only\"\r\n                                htmlFor=\"displayName\"\r\n                            >\r\n                                Name\r\n                            </label>\r\n                            <input\r\n                                required\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                id=\"displayName\"\r\n                                name=\"displayName\"\r\n                                placeholder=\"Name\"\r\n                                value={this.state.displayName}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            </section>\r\n                            <section className=\"form-group\">\r\n                            <label\r\n                                className=\"form-control-label sr-only\"\r\n                                htmlFor=\"Email\"\r\n                            >\r\n                                Email\r\n                            </label>\r\n                            <input\r\n                                required\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            </section>\r\n                            <div className=\"form-group text-right mb-0\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">\r\n                                Check in\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckIn;","import React, { Component } from 'react';\r\nimport firebase from \"./Firebase\";\r\nimport { GoTrashcan, GoStar, GoMail } from \"react-icons/go\";\r\n\r\nclass AttendeesList extends Component{\r\n\r\n    deleteMeeting = (e, currId) =>{\r\n        e.preventDefault();\r\n        const ref = firebase.database().ref(`meetings/${this.props.userID}/${currId}`);\r\n        ref.remove();\r\n    }\r\n\r\n    deleteAttendee = (e, whichMeeting, whichAttendee) => {\r\n        e.preventDefault();\r\n        const adminUser = this.props.adminUser;\r\n\r\n        const ref = firebase.database().ref(`meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}`);\r\n\r\n        ref.remove();\r\n    }\r\n\r\n    toggleStar = (e, star, whichMeeting, whichAttendee) =>{\r\n        e.preventDefault();\r\n        const adminUser = this.props.adminUser;\r\n\r\n        const ref = firebase.database().ref(`meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}/star`);\r\n\r\n        if(star === undefined){\r\n            ref.set(true)\r\n        }else{\r\n            ref.set(!star);\r\n        }\r\n    }\r\n\r\n\trender(){\r\n        const admin = this.props.adminUser === this.props.userID ? true : false;\r\n        const {attendees} = this.props;\r\n        const attendeesList = attendees.map(attendee => {\r\n            return (\r\n                <div className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\" key={attendee.attendeeID}>\r\n                    <div className=\"card \">\r\n                        <div className={'card-body px-3 py-2 d-flex align-items-center ' + (admin ? '':'')} >\r\n                            {admin && (\r\n                            <div className=\"btn-group pr-2\">\r\n                                <button className={\"btn btn-sm \" + (attendee.star ? 'btn-info':'btn-outline-secondary')} title=\"Star the user\" onClick={e => this.toggleStar(e, attendee.star, this.props.meetingID, attendee.attendeeID)}>\r\n                                    <GoStar />\r\n                                </button>\r\n\r\n                                <a href={`mailto:${attendee.attendeeEmail}`} className='btn btn-sm btn-outline-secondary' title=\"Mail Attendee\">\r\n                                    <GoMail />\r\n                                </a>\r\n\r\n                                <button className=\"btn btn-sm btn-outline-secondary\" title=\"Delete Attendee\" onClick={e => this.deleteAttendee(e, this.props.meetingID, attendee.attendeeID)}>\r\n                                    <GoTrashcan />\r\n                                </button>\r\n\r\n                            </div>)}\r\n                            <div>{attendee.attendeeName}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return(\r\n            <div className=\"row justify-content-center\">{attendeesList}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendeesList;","import React, { Component } from 'react';\r\nimport firebase from './Firebase'\r\nimport AttendeesList from './AttendeesList';\r\nimport { FaUndo, FaRandom } from 'react-icons/fa';\r\n\r\nclass Attendees extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayAttendees: [],\r\n            allAttendees: [],\r\n            searchQuery: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const ref = firebase.database().ref(`meetings/${this.props.userID}/${this.props.meetingID}/attendees`)\r\n\r\n        ref.on('value', snapshot => {\r\n            let attendees = snapshot.val();\r\n            let attendeesList = []\r\n            for (const item in attendees) {\r\n                attendeesList.push({\r\n                    attendeeID: item,\r\n                    attendeeName: attendees[item].attendeeName,\r\n                    attendeeEmail: attendees[item].attendeeEmail,\r\n                    star: attendees[item].star\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                displayAttendees: attendeesList,\r\n                allAttendees: attendeesList\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    resetQuery = () => {\r\n        this.setState({\r\n            searchQuery: '',\r\n            displayAttendees: this.state.allAttendees\r\n        })\r\n    }\r\n\r\n    randomAttendee = () => {\r\n        const randAttendee = Math.floor(Math.random() * this.state.allAttendees.length);\r\n        this.resetQuery()\r\n        this.setState({\r\n            displayAttendees: [this.state.allAttendees[randAttendee]]\r\n        })\r\n\r\n    }\r\n\r\n\r\n\trender(){\r\n\r\n        const dataFilter = item => item.attendeeName.toLowerCase().match(this.state.searchQuery.toLowerCase()) && true;\r\n\r\n        const filterAttendees = this.state.displayAttendees.filter(dataFilter);\r\n\r\n        \r\n        return(\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-8\">\r\n                        <h1 className=\"font-weight-light text-center\">\r\n                            Attendees\r\n                        </h1>\r\n\r\n                        <div className=\"card bg-light mb-4\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"input-group input-group-lg\">\r\n                                    <input type='text' name=\"searchQuery\" value={this.state.searchQuery} placeholder=\"Search Attendees\" className=\"form-control\" onChange={this.handleChange} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-sm btn-outline-info\" title=\"Reset Search\" onClick={() => this.resetQuery()} >\r\n                                            <FaUndo />\r\n                                        </button>\r\n                                        <button className=\"btn btn-sm btn-outline-info\" title=\"Random Attendee\" onClick={() => this.randomAttendee()} >\r\n                                            <FaRandom />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <AttendeesList userID={this.props.userID} adminUser={this.props.adminUser} attendees={filterAttendees} meetingID={this.props.meetingID} />\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendees;","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport Home from './Home'\nimport Welcome from './Welcome';\nimport Navigation from './Navigation';\nimport Login from \"./Login\";\nimport Meetings from \"./Meetings\";\nimport Register from \"./Register\";\nimport CheckIn from \"./CheckIn\";\nimport Attendees from \"./Attendees\";\nimport { Router, navigate } from \"@reach/router\";\nclass App extends Component {\n  \n  constructor(){\n    super()\n    this.state = {\n      user: null,\n      displayName: null,\n      userID: null\n    }\n  }\n\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged(FBUser => {\n      if(FBUser){\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid\n        })\n\n        const meetingsRef = firebase.database().ref('meetings/'+FBUser.uid);\n        \n        meetingsRef.on('value', snapshot => {\n          let meetings = snapshot.val()\n          let meetingsList = [];\n          for(let item in meetings){\n            meetingsList.push({\n              meetingId: item,\n              meetingName: meetings[item].meetingName\n            })\n          }\n\n          this.setState({\n            meetings: meetingsList,\n            totalMeetings: meetingsList.length\n          })\n\n        })\n\n      }else{\n        this.setState({\n          user: null\n        })\n      }\n    })\n  }\n\n  handleReg = (username) => {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      FBUser.updateProfile({\n        displayName: username\n      }).then(() => {\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid\n        })\n\n        navigate('/meetings')\n\n      })\n    })\n  }\n\n  logOutUser = (e) => {\n    e.preventDefault();\n    this.setState({\n      userID: null,\n      user: null,\n      displayName: null\n    });\n\n    firebase.auth().signOut().then(() => {\n      navigate('/login');\n    })\n  }\n\n  addMeeting = meetingName => {\n    const ref = firebase.database().ref(`meetings/${this.state.user.uid}`);\n    ref.push({meetingName: meetingName})\n  }\n\n  render(){\n    return (\n      <>\n        <Navigation user={this.state.user} logOutUser={this.logOutUser} />\n        {this.state.user && <Welcome userName={this.state.displayName} logOutUser={this.logOutUser} />}\n        <Router>\n          <Home path='/' user={this.state.user} />\n          <Login path='/login' />\n          <Meetings path='/meetings' meetings={this.state.meetings} userID={this.state.userID} addMeeting={this.addMeeting} />\n          <Register regInfo = {this.handleReg} path='/register' />\n          <CheckIn path='/checkin/:userID/:meetingID' />\n          <Attendees path='/attendees/:userID/:meetingID' adminUser={this.state.userID} />\n\n        </Router>\n        \n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}